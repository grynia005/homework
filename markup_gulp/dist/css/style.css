/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
     ========================================================================== */
/**
   * Remove the margin in all browsers.
   */
body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */
main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */
/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
     ========================================================================== */
/**
   * Remove the gray background on active links in IE 10.
   */
a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */
b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */
small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */
/**
   * Remove the border on images inside links in IE 10.
   */
img {
  border-style: none;
}

/* Forms
     ========================================================================== */
/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */
progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */
textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
     ========================================================================== */
/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */
details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */
summary {
  display: list-item;
}

/* Misc
     ========================================================================== */
/**
   * Add the correct display in IE 10+.
   */
template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */
[hidden] {
  display: none;
}

.clearfix:after {
  content: "";
  display: block;
  clear: both;
}

.ellipsis {
  white-space: nowrap;
  /* 1 */
  text-overflow: ellipsis;
  /* 2 */
  overflow: hidden;
}

[id=wrapper] {
  width: 100%;
  overflow: hidden;
}

.btn {
  background: #000;
  color: #fff;
  border: #000;
  border: #000;
  border-radius: 0;
  display: inline-block;
  font-size: 15px;
  line-height: 17px;
  padding: 10px 20px;
  vertical-align: top;
  text-align: center;
}
.btn:hover {
  background: black;
  color: #fff;
  border: black;
}
.btn-default {
  background: #000;
  color: #fff;
  border: #000;
}
.btn-default:hover {
  background: black;
  color: #fff;
  border: black;
}
.btn-primary {
  background: #007bff;
  color: #fff;
  border: #007bff;
}
.btn-primary:hover {
  background: #0062cc;
  color: #fff;
  border: #0062cc;
}
.btn-warning {
  background: #ffc107;
  color: #fff;
  border: #ffc107;
}
.btn-warning:hover {
  background: #d39e00;
  color: #fff;
  border: #d39e00;
}
.btn-sm {
  border-radius: 0;
  padding: 4px 10px;
}

.btn-group {
  margin: 0 -5px -10px;
  display: flex;
  flex-wrap: wrap;
}
.btn-group .btn {
  margin: 0 5px 10px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlbmRvcnMvX25vcm1hbGl6ZS5zY3NzIiwiYmFzZS9faGVscGVycy5zY3NzIiwibGF5b3V0L19jb21tb24uc2NzcyIsImNvbXBvbmVudHMvX2J1dHRvbi5zY3NzIiwiYWJzdHJhY3RzL19taXhpbnMuc2NzcyIsImFic3RyYWN0cy9fdmFyaWFibGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBQUE7QUFLQTtFQUNJO0FBQ0E7RUFDQTtBQUNBOzs7QUFHSjtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUFBO0FBQUE7QUFLQTtFQUNJO0VBQ0E7OztBQUdKO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFBQTtBQUtBO0VBQ0k7QUFDQTtFQUNBO0FBQ0E7RUFDQTtBQUNBOzs7QUFHSjtBQUFBO0FBQUE7QUFBQTtBQUtBO0VBQ0k7QUFDQTtFQUNBO0FBQ0E7OztBQUdKO0FBQUE7QUFHQTtBQUFBO0FBQUE7QUFJQTtFQUNJOzs7QUFHSjtBQUFBO0FBQUE7QUFBQTtBQUtBO0VBQ0k7QUFDQTtFQUNBO0FBQ0E7RUFDQTtBQUNBOzs7QUFHSjtBQUFBO0FBQUE7QUFJQTtBQUFBO0VBRUk7OztBQUdKO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFBQTtBQUFBO0VBR0k7QUFDQTtFQUNBO0FBQ0E7OztBQUdKO0FBQUE7QUFBQTtBQUlBO0VBQ0k7OztBQUdKO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFBQTtFQUVJO0VBQ0E7RUFDQTtFQUNBOzs7QUFHSjtFQUNJOzs7QUFHSjtFQUNJOzs7QUFHSjtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtFQUtJO0FBQ0E7RUFDQTtBQUNBO0VBQ0E7QUFDQTtFQUNBO0FBQ0E7OztBQUdKO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFBQTtBQUVJO0VBQ0E7OztBQUdKO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFBQTtBQUVJO0VBQ0E7OztBQUdKO0FBQUE7QUFBQTtBQUlBO0FBQUE7QUFBQTtBQUFBO0VBSUk7OztBQUdKO0FBQUE7QUFBQTtBQUlBO0FBQUE7QUFBQTtBQUFBO0VBSUk7RUFDQTs7O0FBR0o7QUFBQTtBQUFBO0FBSUE7QUFBQTtBQUFBO0FBQUE7RUFJSTs7O0FBR0o7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBT0E7RUFDSTtBQUNBO0VBQ0E7QUFDQTtFQUNBO0FBQ0E7RUFDQTtBQUNBO0VBQ0E7QUFDQTtFQUNBO0FBQ0E7OztBQUdKO0FBQUE7QUFBQTtBQUlBO0VBQ0k7OztBQUdKO0FBQUE7QUFBQTtBQUlBO0VBQ0k7OztBQUdKO0FBQUE7QUFBQTtBQUFBO0FBS0E7QUFBQTtFQUVJO0FBQ0E7RUFDQTtBQUNBOzs7QUFHSjtBQUFBO0FBQUE7QUFJQTtBQUFBO0VBRUk7OztBQUdKO0FBQUE7QUFBQTtBQUFBO0FBS0E7RUFDSTtBQUNBO0VBQ0E7QUFDQTs7O0FBR0o7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUFBO0FBQUE7QUFLQTtFQUNJO0FBQ0E7RUFDQTtBQUNBOzs7QUFHSjtBQUFBO0FBR0E7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUFBO0FBSUE7RUFDSTs7O0FBR0o7QUFBQTtBQUdBO0FBQUE7QUFBQTtBQUlBO0VBQ0k7OztBQUdKO0FBQUE7QUFBQTtBQUlBO0VBQ0k7OztBQ2hYRjtFQUNFO0VBQ0E7RUFDQTs7O0FBZ0NKO0VBQ0U7QUFDQTtFQUNBO0FBQ0E7RUFDQTs7O0FDOUNGO0VBQ0U7RUFDQTs7O0FDRkY7RUN1VEUsWUMxU007RUQyU04sT0N0VE07RUR1VE4sUUM1U007RUZYSixRRVdJO0VGVkosZUVtR1U7RUZsR1Y7RUFDQSxXRTRLWTtFRjNLWixhRTRLYztFRjNLZCxTRXdLVTtFRnZLVjtFQUNBOztBQ2tURjtFQUNFLFlDcEltQjtFRHFJbkIsT0MzVEk7RUQ0VEosUUN0SW1COztBRjdLbkI7RUM0U0YsWUMxU007RUQyU04sT0N0VE07RUR1VE4sUUM1U007O0FEOFNOO0VBQ0UsWUNwSW1CO0VEcUluQixPQzNUSTtFRDRUSixRQ3RJbUI7O0FGektuQjtFQ3dTRixZQ3pSSztFRDBSTCxPQ3RUTTtFRHVUTixRQzNSSzs7QUQ2Ukw7RUFDRSxZQzNIMkI7RUQ0SDNCLE9DM1RJO0VENFRKLFFDN0gyQjs7QUY5SzNCO0VDb1NGLFlDblJPO0VEb1JQLE9DdFRNO0VEdVROLFFDclJPOztBRHVSUDtFQUNFLFlDbEgyQjtFRG1IM0IsT0MzVEk7RUQ0VEosUUNwSDJCOztBRm5MM0I7RUFDSSxlRStFWTtFRjlFWjs7O0FBSVI7RUFDSTtFQUNBO0VBQ0E7O0FBRUE7RUFDSSIsImZpbGUiOiJzdHlsZS5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKiBEb2N1bWVudFxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cclxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXHJcbiAqL1xyXG5cclxuaHRtbCB7XHJcbiAgICBsaW5lLWhlaWdodDogMS4xNTtcclxuICAgIC8qIDEgKi9cclxuICAgIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcclxuICAgIC8qIDIgKi9cclxufVxyXG5cclxuLyogU2VjdGlvbnNcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG5cclxuYm9keSB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxyXG4gICAqL1xyXG5cclxubWFpbiB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLyoqXHJcbiAgICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxyXG4gICAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcblxyXG5oMSB7XHJcbiAgICBmb250LXNpemU6IDJlbTtcclxuICAgIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAgICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cclxuICAgKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cclxuICAgKi9cclxuXHJcbmhyIHtcclxuICAgIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xyXG4gICAgLyogMSAqL1xyXG4gICAgaGVpZ2h0OiAwO1xyXG4gICAgLyogMSAqL1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbiAgICAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG5cclxucHJlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcclxuICAgIC8qIDEgKi9cclxuICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gICAgLyogMiAqL1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXHJcbiAgICovXHJcblxyXG5hIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG59XHJcblxyXG4vKipcclxuICAgKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxyXG4gICAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcblxyXG5hYmJyW3RpdGxlXSB7XHJcbiAgICBib3JkZXItYm90dG9tOiBub25lO1xyXG4gICAgLyogMSAqL1xyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgICAvKiAyICovXHJcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XHJcbiAgICAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXHJcbiAgICovXHJcblxyXG5iLFxyXG5zdHJvbmcge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICovXHJcblxyXG5jb2RlLFxyXG5rYmQsXHJcbnNhbXAge1xyXG4gICAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xyXG4gICAgLyogMSAqL1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbiAgICAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG5cclxuc21hbGwge1xyXG4gICAgZm9udC1zaXplOiA4MCU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gICAqIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuXHJcbnN1Yixcclxuc3VwIHtcclxuICAgIGZvbnQtc2l6ZTogNzUlO1xyXG4gICAgbGluZS1oZWlnaHQ6IDA7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgICBib3R0b206IC0wLjI1ZW07XHJcbn1cclxuXHJcbnN1cCB7XHJcbiAgICB0b3A6IC0wLjVlbTtcclxufVxyXG5cclxuLyogRW1iZWRkZWQgY29udGVudFxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICAgKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxyXG4gICAqL1xyXG5cclxuaW1nIHtcclxuICAgIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLyogRm9ybXNcclxuICAgICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAgICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAgICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCxcclxub3B0Z3JvdXAsXHJcbnNlbGVjdCxcclxudGV4dGFyZWEge1xyXG4gICAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XHJcbiAgICAvKiAxICovXHJcbiAgICBmb250LXNpemU6IDEwMCU7XHJcbiAgICAvKiAxICovXHJcbiAgICBsaW5lLWhlaWdodDogMS4xNTtcclxuICAgIC8qIDEgKi9cclxuICAgIG1hcmdpbjogMDtcclxuICAgIC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAgICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAgICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cclxuICAgKi9cclxuXHJcbmJ1dHRvbixcclxuaW5wdXQge1xyXG4gICAgLyogMSAqL1xyXG4gICAgb3ZlcmZsb3c6IHZpc2libGU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gICAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cclxuICAgKi9cclxuXHJcbmJ1dHRvbixcclxuc2VsZWN0IHtcclxuICAgIC8qIDEgKi9cclxuICAgIHRleHQtdHJhbnNmb3JtOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICAgKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICAqL1xyXG5cclxuYnV0dG9uLFxyXG5bdHlwZT1cImJ1dHRvblwiXSxcclxuW3R5cGU9XCJyZXNldFwiXSxcclxuW3R5cGU9XCJzdWJtaXRcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAgICovXHJcblxyXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXHJcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XHJcbiAgICBib3JkZXItc3R5bGU6IG5vbmU7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICAgKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXHJcbiAgICovXHJcblxyXG5idXR0b246LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLFxyXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XHJcbiAgICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cclxuICAgKi9cclxuXHJcbmZpZWxkc2V0IHtcclxuICAgIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAgICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cclxuICAgKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXHJcbiAgICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gICAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxyXG4gICAqL1xyXG5cclxubGVnZW5kIHtcclxuICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgICAvKiAxICovXHJcbiAgICBjb2xvcjogaW5oZXJpdDtcclxuICAgIC8qIDIgKi9cclxuICAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICAgLyogMSAqL1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgLyogMSAqL1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIC8qIDMgKi9cclxuICAgIHdoaXRlLXNwYWNlOiBub3JtYWw7XHJcbiAgICAvKiAxICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXHJcbiAgICovXHJcblxyXG5wcm9ncmVzcyB7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxyXG4gICAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gICAgb3ZlcmZsb3c6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxyXG4gICAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cclxuICAgKi9cclxuXHJcblt0eXBlPVwiY2hlY2tib3hcIl0sXHJcblt0eXBlPVwicmFkaW9cIl0ge1xyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcclxuICAgIC8qIDEgKi9cclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgICAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cclxuICAgKi9cclxuXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxyXG4gICAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxyXG4gICAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbiAgICAvKiAxICovXHJcbiAgICBvdXRsaW5lLW9mZnNldDogLTJweDtcclxuICAgIC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAgICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxyXG4gICAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG4vKipcclxuICAgKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gICAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cclxuICAgKi9cclxuXHJcbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XHJcbiAgICAvKiAxICovXHJcbiAgICBmb250OiBpbmhlcml0O1xyXG4gICAgLyogMiAqL1xyXG59XHJcblxyXG4vKiBJbnRlcmFjdGl2ZVxyXG4gICAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXHJcbiAgICovXHJcblxyXG5kZXRhaWxzIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICAgKi9cclxuXHJcbnN1bW1hcnkge1xyXG4gICAgZGlzcGxheTogbGlzdC1pdGVtO1xyXG59XHJcblxyXG4vKiBNaXNjXHJcbiAgICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cclxuICAgKi9cclxuXHJcbnRlbXBsYXRlIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gICAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxyXG4gICAqL1xyXG5cclxuW2hpZGRlbl0ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufSIsIi8vIGxpc3QgcmVzZXRcclxuJWxpc3RyZXNldCB7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbGlzdC1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLy8gY2xlYXJmaXhcclxuJWNsZWFyZml4IHtcclxuICAmOmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBjbGVhcjogYm90aDtcclxuICB9XHJcbn1cclxuXHJcbi5jbGVhcmZpeCB7XHJcbiAgQGV4dGVuZCAlY2xlYXJmaXg7XHJcbn1cclxuXHJcbi8vIHRyYW5zaXRpb25cclxuJXRyYW5zaXRpb24ge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjNzIGVhc2UtaW4tb3V0O1xyXG59XHJcblxyXG4lYmdDb3ZlciB7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBiYWNrZ3JvdW5kLXJlcGVhdDogbm8tcmVwZWF0O1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxufVxyXG5cclxuJWFic29sdXRlQ292ZXIge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDA7XHJcbiAgbGVmdDogMDtcclxuICByaWdodDogMDtcclxuICBib3R0b206IDA7XHJcbn1cclxuXHJcbi8vLyAqIEhlbHBlciBjbGFzcyB0byB0cnVuY2F0ZSBhbmQgYWRkIGVsbGlwc2lzIHRvIGEgc3RyaW5nIHRvbyBsb25nIGZvciBpdCB0byBmaXRcclxuLy8vICogb24gYSBzaW5nbGUgbGluZS5cclxuLy8vICogMS4gUHJldmVudCBjb250ZW50IGZyb20gd3JhcHBpbmcsIGZvcmNpbmcgaXQgb24gYSBzaW5nbGUgbGluZS5cclxuLy8vICogMi4gQWRkIGVsbGlwc2lzIGF0IHRoZSBlbmQgb2YgdGhlIGxpbmUuXHJcblxyXG4uZWxsaXBzaXMge1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgLyogMSAqL1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIC8qIDIgKi9cclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcbiIsIi8vIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbi8vIFRoaXMgZmlsZSBjb250YWlucyBhbGwgc3R5bGVzIHJlbGF0ZWQgdG8gdGhlIGNvbW1vbiBsYXlvdXQgb2YgdGhlIHNpdGVcclxuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuW2lkPVwid3JhcHBlclwiXSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG4iLCIvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4vLyBUaGlzIGZpbGUgY29udGFpbnMgYWxsIHN0eWxlcyByZWxhdGVkIHRvIHRoZSBidXR0b24gY29tcG9uZW50LlxyXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4uYnRuIHtcclxuICAgIEBpbmNsdWRlIGJ1dHRvbi1jb2xvcigkYnRuLWJhY2tncm91bmQsICRidG4tY29sb3IsICRidG4tYm9yZGVyLCAkYnRuLWhvdmVyLWJhY2tncm91bmQsICRidG4taG92ZXItYm9yZGVyLCAkYnRuLWhvdmVyLWNvbG9yKTtcclxuICAgIGJvcmRlcjogJGJ0bi1ib3JkZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiAkYnRuLWJvcmRlci1yYWRpdXM7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBmb250LXNpemU6ICRidG4tZm9udC1zaXplO1xyXG4gICAgbGluZS1oZWlnaHQ6ICRidG4tbGluZS1oZWlnaHQ7XHJcbiAgICBwYWRkaW5nOiAkYnRuLXBhZGRpbmc7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogdG9wO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG5cclxuICAgICYtZGVmYXVsdCB7XHJcbiAgICAgICAgQGluY2x1ZGUgYnV0dG9uLWNvbG9yKCRidG4tYmFja2dyb3VuZCwgJGJ0bi1jb2xvciwgJGJ0bi1ib3JkZXIsICRidG4taG92ZXItYmFja2dyb3VuZCwgJGJ0bi1ob3Zlci1ib3JkZXIsICRidG4taG92ZXItY29sb3IpO1xyXG4gICAgfVxyXG5cclxuICAgICYtcHJpbWFyeSB7XHJcbiAgICAgICAgQGluY2x1ZGUgYnV0dG9uLWNvbG9yKCRidG4tYmFja2dyb3VuZC1wcmltYXJ5LCAkYnRuLWNvbG9yLXByaW1hcnksICRidG4tYm9yZGVyLXByaW1hcnksICRidG4taG92ZXItYmFja2dyb3VuZC1wcmltYXJ5LCAkYnRuLWhvdmVyLWJvcmRlci1wcmltYXJ5LCAkYnRuLWhvdmVyLWNvbG9yLXByaW1hcnkpO1xyXG4gICAgfVxyXG5cclxuICAgICYtd2FybmluZyB7XHJcbiAgICAgICAgQGluY2x1ZGUgYnV0dG9uLWNvbG9yKCRidG4tYmFja2dyb3VuZC13YXJuaW5nLCAkYnRuLWNvbG9yLXdhcm5pbmcsICRidG4tYm9yZGVyLXdhcm5pbmcsICRidG4taG92ZXItYmFja2dyb3VuZC13YXJuaW5nLCAkYnRuLWhvdmVyLWJvcmRlci13YXJuaW5nLCAkYnRuLWhvdmVyLWNvbG9yLXdhcm5pbmcpO1xyXG4gICAgfVxyXG5cclxuICAgICYtc20ge1xyXG4gICAgICAgIGJvcmRlci1yYWRpdXM6ICRidG4tYm9yZGVyLXJhZGl1cy1zbTtcclxuICAgICAgICBwYWRkaW5nOiA0cHggMTBweDtcclxuICAgIH1cclxufVxyXG5cclxuLmJ0bi1ncm91cCB7XHJcbiAgICBtYXJnaW46IDAgLTVweCAtMTBweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcblxyXG4gICAgLmJ0biB7XHJcbiAgICAgICAgbWFyZ2luOiAwIDVweCAxMHB4O1xyXG4gICAgfVxyXG59IiwiLy8gdmVydGljYWwgYWxpZ24gZWwgaW5zaWRlIHBhcmVudCB3aXRoIGZpeGVkIGhlaWdodC9taW4taGVpZ2h0XHJcbi8vIHVzYWdlXHJcbi8vIGh0bWwgLSAucGFyZW50Pi5jaGlsZFxyXG4vLyBzY3NzIC0gQGluY2x1ZGUgdi1hbGlnbjtcclxuLy8gICAgIG9yIEBpbmNsdWRlIHYtYWxpZ24oMjUwcHgpO1xyXG4vLyAgICAgb3IgQGluY2x1ZGUgdi1hbGlnbigyNTBweCwgYm90dG9tLCBiZWZvcmUpO1xyXG4vL1xyXG5AbWl4aW4gdi1hbGlnbigkdmEtaGVpZ2h0OiAxMDAlLCAkdmEtZGlyZWN0aW9uOiBtaWRkbGUsICR2YS1wc2V1ZG86IGFmdGVyKSB7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICY6I3skdmEtcHNldWRvfSB7XHJcbiAgICBjb250ZW50OiAnJztcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiAkdmEtZGlyZWN0aW9uO1xyXG4gICAgd2lkdGg6IDA7XHJcbiAgICBtaW4taGVpZ2h0OiAkdmEtaGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgPioge1xyXG4gICAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICAgIHZlcnRpY2FsLWFsaWduOiAkdmEtZGlyZWN0aW9uO1xyXG4gICAgbWF4LXdpZHRoOiA5OSU7XHJcbiAgfVxyXG59XHJcblxyXG4vLyB2ZXJ0aWNhbCBhbGlnbiBhIHBhaXIgb2YgY2hpbGQgZWwgaW5zaWRlIHBhcmVudFxyXG4vLyB1c2FnZVxyXG4vLyBodG1sIC0gLnBvc3Q+LmltYWdlKy50ZXh0XHJcbi8vIHNjc3MgLSBAaW5jbHVkZSB2LWFsaWduLXBhaXIoaW1hZ2UsIHRleHQpO1xyXG4vLyAgICAgb3IgQGluY2x1ZGUgdi1hbGlnbi1wYWlyKGltYWdlLCB0ZXh0LCBib3R0b20pO1xyXG4vLyAgICAgb3IgQGluY2x1ZGUgdi1hbGlnbi1wYWlyKGltYWdlLCB0ZXh0LCBtaWRkbGUsIDIwMHB4KTtcclxuLy9cclxuQG1peGluIHYtYWxpZ24tcGFpcigkY2hpbGQtbmFtZTEsICRjaGlsZC1uYW1lMiwgJHZhbGlnbjogbWlkZGxlLCAkd2lkdGgxOiBhdXRvLCAkd2lkdGgyOiBhdXRvKSB7XHJcbiAgZGlzcGxheTogdGFibGU7XHJcblxyXG4gIC4jeyRjaGlsZC1uYW1lMX0ge1xyXG4gICAgZGlzcGxheTogdGFibGUtY2VsbDtcclxuICAgIHZlcnRpY2FsLWFsaWduOiAkdmFsaWduO1xyXG4gICAgd2lkdGg6ICR3aWR0aDE7XHJcbiAgfVxyXG5cclxuICAuI3skY2hpbGQtbmFtZTJ9IHtcclxuICAgIGRpc3BsYXk6IHRhYmxlLWNlbGw7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogJHZhbGlnbjtcclxuICAgIHdpZHRoOiAkd2lkdGgyO1xyXG4gIH1cclxufVxyXG5cclxuLy8gdmVydGljYWwgYWxpZ24gZWxcclxuLy8gdXNhZ2U6IEBpbmNsdWRlIHZlcnRpY2FsLWFsaWduLWVsO1xyXG4vL1xyXG5AbWl4aW4gdmVydGljYWwtYWxpZ24tZWwge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB0b3A6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTUwJSk7XHJcbn1cclxuXHJcbi8vLyBNaXhpbiBoZWxwaW5nIGRlZmluaW5nIGJvdGggYHdpZHRoYCBhbmQgYGhlaWdodGAgc2ltdWx0YW5lb3VzbHkuXHJcbi8vL1xyXG4vLy8gQGF1dGhvciBIdWdvIEdpcmF1ZGVsXHJcbi8vL1xyXG4vLy8gQGFjY2VzcyBwdWJsaWNcclxuLy8vXHJcbi8vLyBAcGFyYW0ge0xlbmd0aH0gJHdpZHRoIC0gRWxlbWVudOKAmXMgYHdpZHRoYFxyXG4vLy8gQHBhcmFtIHtMZW5ndGh9ICRoZWlnaHQgKCR3aWR0aCkgLSBFbGVtZW504oCZcyBgaGVpZ2h0YFxyXG4vLy9cclxuLy8vIEBleGFtcGxlIHNjc3MgLSBVc2FnZVxyXG4vLy8gICAuZm9vIHtcclxuLy8vICAgICBAaW5jbHVkZSBzaXplKDEwZW0pO1xyXG4vLy8gICB9XHJcbi8vL1xyXG4vLy8gICAuYmFyIHtcclxuLy8vICAgICBAaW5jbHVkZSBzaXplKDEwMCUsIDEwZW0pO1xyXG4vLy8gICB9XHJcbi8vL1xyXG4vLy8gQGV4YW1wbGUgY3NzIC0gQ1NTIG91dHB1dFxyXG4vLy8gICAuZm9vIHtcclxuLy8vICAgICB3aWR0aDogMTBlbTtcclxuLy8vICAgICBoZWlnaHQ6IDEwZW07XHJcbi8vLyAgIH1cclxuLy8vXHJcbi8vLyAgIC5iYXIge1xyXG4vLy8gICAgIHdpZHRoOiAxMDAlO1xyXG4vLy8gICAgIGhlaWdodDogMTBlbTtcclxuLy8vICAgfVxyXG4vLy9cclxuQG1peGluIHNpemUoJHdpZHRoLCAkaGVpZ2h0OiAkd2lkdGgpIHtcclxuICB3aWR0aDogJHdpZHRoO1xyXG4gIGhlaWdodDogJGhlaWdodDtcclxufVxyXG5cclxuLy8vIGZvbnQtc21vdGhpbmdcclxuLy8vIEBpbmNsdWRlIGZvbnQtc21vb3RoaW5nKG9uKTtcclxuLy8vIEBpbmNsdWRlIGZvbnQtc21vb3RoaW5nKG9mZik7XHJcbkBtaXhpbiBmb250LXNtb290aGluZygkdmFsdWU6IG9uKSB7XHJcbiAgQGlmICR2YWx1ZSA9PW9uIHtcclxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xyXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTtcclxuICB9XHJcblxyXG4gIEBlbHNlIHtcclxuICAgIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IHN1YnBpeGVsLWFudGlhbGlhc2VkO1xyXG4gICAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGF1dG87XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLy8vIEhpZGVzIHRoZSB0ZXh0IGluIGFuIGVsZW1lbnQsIGNvbW1vbmx5IHVzZWQgdG8gc2hvdyBhbiBpbWFnZS4gU29tZSBlbGVtZW50cyB3aWxsIG5lZWQgYmxvY2stbGV2ZWwgc3R5bGVzIGFwcGxpZWQuXHJcbi8vL1xyXG4vLy8gQGxpbmsgaHR0cDovL3plbGRtYW4uY29tLzIwMTIvMDMvMDEvcmVwbGFjaW5nLXRoZS05OTk5cHgtaGFjay1uZXctaW1hZ2UtcmVwbGFjZW1lbnRcclxuLy8vXHJcbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2VcclxuLy8vICAgLmVsZW1lbnQge1xyXG4vLy8gICAgIEBpbmNsdWRlIGhpZGUtdGV4dDtcclxuLy8vICAgfVxyXG4vLy9cclxuLy8vIEBleGFtcGxlIGNzcyAtIENTUyBPdXRwdXRcclxuLy8vICAgLmVsZW1lbnQge1xyXG4vLy8gICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbi8vLyAgICAgdGV4dC1pbmRlbnQ6IDEwMSU7XHJcbi8vLyAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuLy8vICAgfVxyXG4vLy9cclxuQG1peGluIGhpZGUtdGV4dCB7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICB0ZXh0LWluZGVudDogMTAxJTtcclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG59XHJcblxyXG5cclxuLy8vIENyZWF0ZXMgYSB2aXN1YWwgdHJpYW5nbGUuXHJcbi8vLyBNaXhpbiB0YWtlcyAoJHNpemUsICRjb2xvciwgJGRpcmVjdGlvbilcclxuLy8vIFRoZSAkc2l6ZSBhcmd1bWVudCBjYW4gdGFrZSBvbmUgb3IgdHdvIHZhbHVlc+KAlHdpZHRoIGhlaWdodC5cclxuLy8vIFRoZSAkY29sb3IgYXJndW1lbnQgY2FuIHRha2Ugb25lIG9yIHR3b1xyXG4vLy8gdmFsdWVz4oCUZm9yZWdyb3VuZC1jb2xvciBiYWNrZ3JvdW5kLWNvbG9yLlxyXG4vLy9cclxuLy8vIEBhdXRob3IgaHR0cDovL2JvdXJib24uaW8vZG9jcy8jdHJpYW5nbGVcclxuLy8vXHJcbi8vLyAkZGlyZWN0aW9uOlxyXG4vLy8gdXAsIGRvd24sIGxlZnQsIHJpZ2h0LCB1cC1yaWdodCwgdXAtbGVmdCwgZG93bi1yaWdodCwgZG93bi1sZWZ0XHJcbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2VcclxuLy8vICAgQGluY2x1ZGUgdHJpYW5nbGUoMTJweCwgZ3JheSwgZG93bik7XHJcbi8vLyAgIEBpbmNsdWRlIHRyaWFuZ2xlKDEycHggNnB4LCBncmF5IGJsdWUsIHVwLWxlZnQpO1xyXG4vLy9cclxuQG1peGluIHRyaWFuZ2xlKCRzaXplLCAkY29sb3IsICRkaXJlY3Rpb24pIHtcclxuICAkd2lkdGg6IG50aCgkc2l6ZSwgMSk7XHJcbiAgJGhlaWdodDogbnRoKCRzaXplLCBsZW5ndGgoJHNpemUpKTtcclxuICAkZm9yZWdyb3VuZC1jb2xvcjogbnRoKCRjb2xvciwgMSk7XHJcbiAgJGJhY2tncm91bmQtY29sb3I6IGlmKGxlbmd0aCgkY29sb3IpPT0yLCBudGgoJGNvbG9yLCAyKSwgdHJhbnNwYXJlbnQpO1xyXG4gIGhlaWdodDogMDtcclxuICB3aWR0aDogMDtcclxuXHJcbiAgQGlmICgkZGlyZWN0aW9uID09dXApIG9yICgkZGlyZWN0aW9uID09ZG93bikgb3IgKCRkaXJlY3Rpb24gPT1yaWdodCkgb3IgKCRkaXJlY3Rpb24gPT1sZWZ0KSB7XHJcbiAgICAkd2lkdGg6ICR3aWR0aCAvIDI7XHJcbiAgICAkaGVpZ2h0OiBpZihsZW5ndGgoJHNpemUpID4gMSwgJGhlaWdodCwgJGhlaWdodC8yKTtcclxuXHJcbiAgICBAaWYgJGRpcmVjdGlvbiA9PXVwIHtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogJGhlaWdodCBzb2xpZCAkZm9yZWdyb3VuZC1jb2xvcjtcclxuICAgICAgYm9yZGVyLWxlZnQ6ICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PXJpZ2h0IHtcclxuICAgICAgYm9yZGVyLWJvdHRvbTogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgICBib3JkZXItbGVmdDogJGhlaWdodCBzb2xpZCAkZm9yZWdyb3VuZC1jb2xvcjtcclxuICAgICAgYm9yZGVyLXRvcDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT1kb3duIHtcclxuICAgICAgYm9yZGVyLWxlZnQ6ICR3aWR0aCBzb2xpZCAkYmFja2dyb3VuZC1jb2xvcjtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XHJcbiAgICAgIGJvcmRlci10b3A6ICRoZWlnaHQgc29saWQgJGZvcmVncm91bmQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PWxlZnQge1xyXG4gICAgICBib3JkZXItYm90dG9tOiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XHJcbiAgICAgIGJvcmRlci1yaWdodDogJGhlaWdodCBzb2xpZCAkZm9yZWdyb3VuZC1jb2xvcjtcclxuICAgICAgYm9yZGVyLXRvcDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT11cC1yaWdodCkgb3IgKCRkaXJlY3Rpb24gPT11cC1sZWZ0KSB7XHJcbiAgICBib3JkZXItdG9wOiAkaGVpZ2h0IHNvbGlkICRmb3JlZ3JvdW5kLWNvbG9yO1xyXG5cclxuICAgIEBpZiAkZGlyZWN0aW9uID09dXAtcmlnaHQge1xyXG4gICAgICBib3JkZXItbGVmdDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgfVxyXG5cclxuICAgIEBlbHNlIGlmICRkaXJlY3Rpb24gPT11cC1sZWZ0IHtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PWRvd24tcmlnaHQpIG9yICgkZGlyZWN0aW9uID09ZG93bi1sZWZ0KSB7XHJcbiAgICBib3JkZXItYm90dG9tOiAkaGVpZ2h0IHNvbGlkICRmb3JlZ3JvdW5kLWNvbG9yO1xyXG5cclxuICAgIEBpZiAkZGlyZWN0aW9uID09ZG93bi1yaWdodCB7XHJcbiAgICAgIGJvcmRlci1sZWZ0OiAkd2lkdGggc29saWQgJGJhY2tncm91bmQtY29sb3I7XHJcbiAgICB9XHJcblxyXG4gICAgQGVsc2UgaWYgJGRpcmVjdGlvbiA9PWRvd24tbGVmdCB7XHJcbiAgICAgIGJvcmRlci1yaWdodDogJHdpZHRoIHNvbGlkICRiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT1pbnNldC11cCkge1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkYmFja2dyb3VuZC1jb2xvciAkYmFja2dyb3VuZC1jb2xvciAkZm9yZWdyb3VuZC1jb2xvcjtcclxuICAgIGJvcmRlci1zdHlsZTogc29saWQ7XHJcbiAgICBib3JkZXItd2lkdGg6ICRoZWlnaHQgJHdpZHRoO1xyXG4gIH1cclxuXHJcbiAgQGVsc2UgaWYgKCRkaXJlY3Rpb24gPT1pbnNldC1kb3duKSB7XHJcbiAgICBib3JkZXItY29sb3I6ICRmb3JlZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci13aWR0aDogJGhlaWdodCAkd2lkdGg7XHJcbiAgfVxyXG5cclxuICBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PWluc2V0LXJpZ2h0KSB7XHJcbiAgICBib3JkZXItY29sb3I6ICRiYWNrZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yICRiYWNrZ3JvdW5kLWNvbG9yICRmb3JlZ3JvdW5kLWNvbG9yO1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIGJvcmRlci13aWR0aDogJHdpZHRoICRoZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBAZWxzZSBpZiAoJGRpcmVjdGlvbiA9PWluc2V0LWxlZnQpIHtcclxuICAgIGJvcmRlci1jb2xvcjogJGJhY2tncm91bmQtY29sb3IgJGZvcmVncm91bmQtY29sb3IgJGJhY2tncm91bmQtY29sb3IgJGJhY2tncm91bmQtY29sb3I7XHJcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG4gICAgYm9yZGVyLXdpZHRoOiAkd2lkdGggJGhlaWdodDtcclxuICB9XHJcbn1cclxuXHJcblxyXG4vLy8gQW5pbWF0ZSBjc3MgcHJvcGVydGllc1xyXG4vLyB1c2FnZVxyXG4vLyBzY3NzIC0gQGluY2x1ZGUgYW5pbWF0ZShjb2xvcik7XHJcbi8vICAgICBvciBAaW5jbHVkZSBhbmltYXRlKGNvbG9yIHdpZHRoKTtcclxuLy8gICAgIG9yIEBpbmNsdWRlIGFuaW1hdGUoY29sb3Igd2lkdGgsIDFzLCBsaW5lYXIpO1xyXG4vL1xyXG4kYW5pbWF0aW9uLXNwZWVkOiAwLjNzICFkZWZhdWx0O1xyXG5cclxuQG1peGluIGFuaW1hdGUoJHByb3BlcnRpZXMsICRkdXJhdGlvbjogJGFuaW1hdGlvbi1zcGVlZCwgJGVhc2luZzogZWFzZS1pbi1vdXQpIHtcclxuICAkbGlzdDogKCk7XHJcblxyXG4gIEBlYWNoICRwcm9wIGluICRwcm9wZXJ0aWVzIHtcclxuICAgICRzdHI6ICN7JHByb3B9ICN7JGR1cmF0aW9ufSAjeyRlYXNpbmd9O1xyXG4gICAgJGxpc3Q6IGpvaW4oJGxpc3QsICN7JHN0cn0sIGNvbW1hKTtcclxuICB9XHJcblxyXG4gIHRyYW5zaXRpb246ICRsaXN0O1xyXG59XHJcblxyXG5cclxuLy8vIE1peGluIGZvciBzdHlsaW5nIGZvcm0tcGxhY2Vob2xkZXJzXHJcbi8vLyBAZXhhbXBsZSBzY3NzIC0gVXNhZ2VcclxuLy8vICAgQGluY2x1ZGUgcGxhY2Vob2xkZXIge1xyXG4vLy8gICAgY29sb3I6ICMzMzM7XHJcbi8vLyAgIH1cclxuLy8vXHJcbi8vLyAgIGlucHV0W3R5cGU9J3RleHQnXSxcclxuLy8vICAgaW5wdXRbdHlwZT0ndGVsJ10sXHJcbi8vLyAgIGlucHV0W3R5cGU9J2VtYWlsJ10ge1xyXG4vLy8gICAgIEBpbmNsdWRlIHBsYWNlaG9sZGVyIHtcclxuLy8vICAgICAgY29sb3I6IHJlZDtcclxuLy8vICAgICB9XHJcbi8vLyAgIH1cclxuXHJcbkBtaXhpbiBwbGFjZWhvbGRlciB7XHJcbiAgJjo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcblxyXG4gICY6Oi1tb3otcGxhY2Vob2xkZXIge1xyXG4gICAgb3BhY2l0eTogMTtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxuXHJcbiAgJjotbW96LXBsYWNlaG9sZGVyIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxuXHJcbiAgJjotbXMtaW5wdXQtcGxhY2Vob2xkZXIge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG5cclxuICAmLnBsYWNlaG9sZGVyIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuLy8vIEZvbnQtc2l6ZSBweCB0byByZW0gY2FsY1xyXG4vLy8gQGV4YW1wbGUgc2NzcyAtIFVzYWdlXHJcbi8vLyBzZWxlY3RvciB7XHJcbi8vLyAgICBAaW5jbHVkZSByZW0tZm9udC1zaXplKDE2cHgpO1xyXG4vLy8gfVxyXG5cclxuQG1peGluIHJlbS1mb250LXNpemUoJHB4LXNpemUpIHtcclxuICBmb250LXNpemU6ICRweC1zaXplO1xyXG4gIGZvbnQtc2l6ZTogKCRweC1zaXplIC8gMTBweCkgKyByZW07XHJcbn1cclxuXHJcbi8vZm9udC1mYWNlXHJcbkBtaXhpbiBmb250LWZhY2UoJGZvbnQtbmFtZSwgJGZvbnQtcGF0aCwgJHdlaWdodCwgJHN0eWxlKSB7XHJcbiAgQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogJyN7JGZvbnQtbmFtZX0nO1xyXG4gICAgc3JjOiB1cmwoJ2ZvbnRzLyN7JGZvbnQtcGF0aH0ud29mZjInKSBmb3JtYXQoJ3dvZmYnKSxcclxuICAgIHVybCgnZm9udHMvI3skZm9udC1wYXRofS53b2ZmJykgZm9ybWF0KCd3b2ZmJyk7XHJcbiAgICBmb250LXdlaWdodDogJHdlaWdodDtcclxuICAgIGZvbnQtc3R5bGU6ICRzdHlsZTtcclxuICB9XHJcbn1cclxuXHJcbi8vIEJ1dHRvbiBzaXplc1xyXG5AbWl4aW4gYnV0dG9uLWNvbG9yKCRidG4tYmFja2dyb3VuZCwgJGJ0bi1jb2xvciwgJGJ0bi1ib3JkZXIsICRidG4taG92ZXItYmFja2dyb3VuZCwgJGJ0bi1ob3Zlci1ib3JkZXIsICRidG4taG92ZXItY29sb3IpIHtcclxuICBiYWNrZ3JvdW5kOiAkYnRuLWJhY2tncm91bmQ7XHJcbiAgY29sb3I6ICRidG4tY29sb3I7XHJcbiAgYm9yZGVyOiAkYnRuLWJvcmRlcjtcclxuXHJcbiAgJjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAkYnRuLWhvdmVyLWJhY2tncm91bmQ7XHJcbiAgICBjb2xvcjogJGJ0bi1ob3Zlci1jb2xvcjtcclxuICAgIGJvcmRlcjogJGJ0bi1ob3Zlci1ib3JkZXI7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gYWRkLXBhcmFtcygpIHtcclxuXHJcbiAgQGVhY2ggJHZhbCxcclxuICAkbWVkaWEgaW4gJGdyaWQge1xyXG4gICAgJi5kZi1yci0jeyR2YWx9IHtcclxuICAgICAgQGluY2x1ZGUgbWVkaWEoJ+KJpScgKyAkbWVkaWEpIHtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93LXJldmVyc2U7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmLmRmLWFpYy0jeyR2YWx9IHtcclxuICAgICAgQGluY2x1ZGUgbWVkaWEoJ+KJpScgKyAkbWVkaWEpIHtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4vLyBmbGV4IGdyaWRcclxuQG1peGluIGZsZXgtZ3JpZCgpIHtcclxuXHJcbiAgQGVhY2ggJHZhbCxcclxuICAkbWVkaWEgaW4gJGdyaWQge1xyXG4gICAgQGZvciAkZ3V0dGVyIGZyb20gMSB0aHJvdWdoIDEyIHtcclxuICAgICAgLmNvbC0jeyR2YWx9LSN7JGd1dHRlcn0ge1xyXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhKCfiiaUnICsgJG1lZGlhKSB7XHJcbiAgICAgICAgICBmbGV4OiAxIDAgY2FsYygxMDAlIC8gMTIgKiAjeyRndXR0ZXJ9KTtcclxuICAgICAgICAgIG1heC13aWR0aDogY2FsYygxMDAlIC8gMTIgKiAjeyRndXR0ZXJ9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAZm9yICRndXR0ZXIgZnJvbSAwIHRocm91Z2ggMTEge1xyXG4gICAgICAuY29sLW9mZnNldC0jeyR2YWx9LSN7JGd1dHRlcn0ge1xyXG4gICAgICAgIEBpbmNsdWRlIG1lZGlhKCfiiaUnICsgJG1lZGlhKSB7XHJcbiAgICAgICAgICBtYXJnaW4tbGVmdDogY2FsYygxMDAlIC8gMTIgKiAjeyRndXR0ZXJ9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiB2LWNlbnRlcigkbWluLWhlaWdodDogNDAwcHgpIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICA+KiB7XHJcbiAgICBtaW4taGVpZ2h0OiAkbWluLWhlaWdodDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICB9XHJcbn0iLCIvLyBDb2xvcnNcclxuLy8gQ29sb3IgY2FsY3VsYXRvciAtIGh0dHA6Ly9yYXpvcmphbS5naXRodWIuaW8vc2Fzc2NvbG91cmZ1bmN0aW9uY2FsY3VsYXRvci9cclxuLy8gQ29sb3IgbmFtZXMgLSBodHRwOi8vbmFtZS1vZi1jb2xvci5jb20vXHJcbi8vIENvbG9yIHN5c3RlbVxyXG5cclxuJHdoaXRlOiAjZmZmICFkZWZhdWx0O1xyXG4kZ3JheTogI2RkZCAhZGVmYXVsdDtcclxuJGdyYXktMTAwOiAjZjhmOWZhICFkZWZhdWx0O1xyXG4kZ3JheS0yMDA6ICNlOWVjZWYgIWRlZmF1bHQ7XHJcbiRncmF5LTMwMDogI2RlZTJlNiAhZGVmYXVsdDtcclxuJGdyYXktNDAwOiAjY2VkNGRhICFkZWZhdWx0O1xyXG4kZ3JheS01MDA6ICNhZGI1YmQgIWRlZmF1bHQ7XHJcbiRncmF5LTYwMDogIzZjNzU3ZCAhZGVmYXVsdDtcclxuJGdyYXktNzAwOiAjNDk1MDU3ICFkZWZhdWx0O1xyXG4kZ3JheS04MDA6ICMzNDNhNDAgIWRlZmF1bHQ7XHJcbiRncmF5LTkwMDogIzIxMjUyOSAhZGVmYXVsdDtcclxuJGJsYWNrOiAjMDAwICFkZWZhdWx0O1xyXG5cclxuJGdyYXlzOiAoXHJcbiAgKSAhZGVmYXVsdDtcclxuLy8gc3R5bGVsaW50LWRpc2FibGUtbmV4dC1saW5lIHNjc3MvZG9sbGFyLXZhcmlhYmxlLWRlZmF1bHRcclxuJGdyYXlzOiBtYXAtbWVyZ2UoKFwiMTAwXCI6ICRncmF5LTEwMCxcclxuICAgICAgXCIyMDBcIjogJGdyYXktMjAwLFxyXG4gICAgICBcIjMwMFwiOiAkZ3JheS0zMDAsXHJcbiAgICAgIFwiNDAwXCI6ICRncmF5LTQwMCxcclxuICAgICAgXCI1MDBcIjogJGdyYXktNTAwLFxyXG4gICAgICBcIjYwMFwiOiAkZ3JheS02MDAsXHJcbiAgICAgIFwiNzAwXCI6ICRncmF5LTcwMCxcclxuICAgICAgXCI4MDBcIjogJGdyYXktODAwLFxyXG4gICAgICBcIjkwMFwiOiAkZ3JheS05MDAgKSxcclxuICAgICRncmF5c1xyXG4pO1xyXG5cclxuJGJsdWU6ICMwMDdiZmYgIWRlZmF1bHQ7XHJcbiRpbmRpZ286ICM2NjEwZjIgIWRlZmF1bHQ7XHJcbiRwdXJwbGU6ICM2ZjQyYzEgIWRlZmF1bHQ7XHJcbiRwaW5rOiAjZTgzZThjICFkZWZhdWx0O1xyXG4kcmVkOiAjZGMzNTQ1ICFkZWZhdWx0O1xyXG4kb3JhbmdlOiAjZmQ3ZTE0ICFkZWZhdWx0O1xyXG4keWVsbG93OiAjZmZjMTA3ICFkZWZhdWx0O1xyXG4kZ3JlZW46ICMyOGE3NDUgIWRlZmF1bHQ7XHJcbiR0ZWFsOiAjMjBjOTk3ICFkZWZhdWx0O1xyXG4kY3lhbjogIzE3YTJiOCAhZGVmYXVsdDtcclxuXHJcbiRjb2xvcnM6IChcclxuICApICFkZWZhdWx0O1xyXG4vLyBzdHlsZWxpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc2Nzcy9kb2xsYXItdmFyaWFibGUtZGVmYXVsdFxyXG4kY29sb3JzOiBtYXAtbWVyZ2UoKFwiYmx1ZVwiOiAkYmx1ZSxcclxuICAgICAgXCJpbmRpZ29cIjogJGluZGlnbyxcclxuICAgICAgXCJwdXJwbGVcIjogJHB1cnBsZSxcclxuICAgICAgXCJwaW5rXCI6ICRwaW5rLFxyXG4gICAgICBcInJlZFwiOiAkcmVkLFxyXG4gICAgICBcIm9yYW5nZVwiOiAkb3JhbmdlLFxyXG4gICAgICBcInllbGxvd1wiOiAkeWVsbG93LFxyXG4gICAgICBcImdyZWVuXCI6ICRncmVlbixcclxuICAgICAgXCJ0ZWFsXCI6ICR0ZWFsLFxyXG4gICAgICBcImN5YW5cIjogJGN5YW4sXHJcbiAgICAgIFwid2hpdGVcIjogJHdoaXRlLFxyXG4gICAgICBcImdyYXlcIjogJGdyYXktNjAwLFxyXG4gICAgICBcImdyYXktZGFya1wiOiAkZ3JheS04MDAgKSxcclxuICAgICRjb2xvcnNcclxuKTtcclxuXHJcbiRwcmltYXJ5OiAkYmx1ZSAgIWRlZmF1bHQ7XHJcbiRzZWNvbmRhcnk6ICRncmF5LTYwMCAgIWRlZmF1bHQ7XHJcbiRzdWNjZXNzOiAkZ3JlZW4gICFkZWZhdWx0O1xyXG4kaW5mbzogJGN5YW4gICFkZWZhdWx0O1xyXG4kd2FybmluZzogJHllbGxvdyAgIWRlZmF1bHQ7XHJcbiRkYW5nZXI6ICRyZWQgICFkZWZhdWx0O1xyXG4kbGlnaHQ6ICRncmF5LTEwMCAgIWRlZmF1bHQ7XHJcbiRkYXJrOiAkZ3JheS04MDAgICFkZWZhdWx0O1xyXG5cclxuJHRoZW1lLWNvbG9yczogKFxyXG4gICkgIWRlZmF1bHQ7XHJcbi8vIHN0eWxlbGludC1kaXNhYmxlLW5leHQtbGluZSBzY3NzL2RvbGxhci12YXJpYWJsZS1kZWZhdWx0XHJcbiR0aGVtZS1jb2xvcnM6IG1hcC1tZXJnZSgoXCJwcmltYXJ5XCI6ICRwcmltYXJ5LFxyXG4gICAgICBcInNlY29uZGFyeVwiOiAkc2Vjb25kYXJ5LFxyXG4gICAgICBcInN1Y2Nlc3NcIjogJHN1Y2Nlc3MsXHJcbiAgICAgIFwiaW5mb1wiOiAkaW5mbyxcclxuICAgICAgXCJ3YXJuaW5nXCI6ICR3YXJuaW5nLFxyXG4gICAgICBcImRhbmdlclwiOiAkZGFuZ2VyLFxyXG4gICAgICBcImxpZ2h0XCI6ICRsaWdodCxcclxuICAgICAgXCJkYXJrXCI6ICRkYXJrICksXHJcbiAgICAkdGhlbWUtY29sb3JzXHJcbik7XHJcblxyXG4vLyBmb250cyBuYW1lXHJcbiRiYXNlLWZvbnQtc2Fucy1zZXJpZjogJ0FyaWFsJywgJ0hlbHZldGljYSBOZXVlJywgJ0hlbHZldGljYScsIHNhbnMtc2VyaWY7XHJcbiRiYXNlLWZvbnQtc2VyaWY6ICdUaW1lcyBOZXcgUm9tYW4nLCAnVGltZXMnLCAnQmFza2VydmlsbGUnLCAnR2VvcmdpYScsIHNlcmlmO1xyXG5cclxuJGJhc2UtZm9udDogJGJhc2UtZm9udC1zYW5zLXNlcmlmO1xyXG5cclxuLy8gQm9keVxyXG4kYmFzZS10ZXh0LWNvbG9yOiAkYmxhY2sgICFkZWZhdWx0O1xyXG4kYmFzZS1iYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGUgICFkZWZhdWx0O1xyXG4kYmFzZS1iYWNrZ3JvdW5kLWJvZHk6ICR3aGl0ZSAgIWRlZmF1bHQ7XHJcbiRiYXNlLWJhY2tncm91bmQtZm9vdGVyOiAkYmFzZS1iYWNrZ3JvdW5kLWJvZHkgICFkZWZhdWx0O1xyXG4kZm9udC1zaXplLWJhc2U6IDE2cHggIWRlZmF1bHQ7XHJcbiRsaW5lLWhlaWdodC1iYXNlOiAxLjIgIWRlZmF1bHQ7XHJcbiRmb250LXNpemUtYmFzZS1sYWdyZTogMThweCAhZGVmYXVsdDtcclxuJGxpbmUtaGVpZ2h0LWJhc2UtbGFncmU6IDEuMiAhZGVmYXVsdDtcclxuJGJhc2UtZm9udC1mYW1pbHk6ICRiYXNlLWZvbnQgICFkZWZhdWx0O1xyXG4kYmFzZS1taW4td2lkdGg6IDMyMHB4O1xyXG5cclxuLy8gYmFzZSB2YXJpYWJsZXNcclxuJGJhc2UtcmFkaXVzOiAwO1xyXG4kYmFzZS1yYWRpdXMtc21hbGw6IDA7XHJcblxyXG4vLyBjb250YWluZXIgc2V0dGluZ3NcclxuJG1heC13aWR0aC1jZW50ZXItY29udGFpbmVyOiAxMjAwcHg7XHJcbiRndXR0ZXI6IDE1cHg7XHJcbiRwYWRkaW5nLWNvbnRhaW5lcjogMCAkZ3V0dGVyO1xyXG5cclxuLy8gZ3JpZCBzaXN0ZW1cclxuJGdyaWQ6IChcclxuICBwaDogJ3Bob25lJyxcclxuICBzbTogJ3RhYmxldCcsXHJcbiAgbWQ6ICdkZXNrdG9wJ1xyXG4pO1xyXG5cclxuLy8gZm9udCB3ZWlnaHRcclxuJHRoaW46IDEwMDtcclxuJGxpZ2h0LWZvbnQ6IDMwMDtcclxuJG5vcm1hbDogNDAwO1xyXG4kbWVkaXVtOiA1MDA7XHJcbiRzZW1pYm9sZDogNjAwO1xyXG4kYm9sZDogNzAwO1xyXG4kZXh0cmE6IDgwMDtcclxuJGJsYWNrLWZvbnQ6IDkwMDtcclxuXHJcbi8vIGRlZmF1bHQgbWFyZ2luc1xyXG4kdmVydGljYWwtcmh5dGhtOiAkZm9udC1zaXplLWJhc2UgKyA0O1xyXG4kd2lkZ2V0LW1hcmdpbjogMjBweDtcclxuXHJcbi8vIExpa3NcclxuJGJhc2UtbGluay1jb2xvcjogJGJsdWU7XHJcbiRiYXNlLWxpbmstaG92ZXItY29sb3I6ICRibGFjaztcclxuJHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuJHRleHQtZGVjb3JhdGlvbi1ob3Zlcjogbm9uZTtcclxuXHJcbi8vIEhlYWRlcnMgc2l6ZVxyXG4kdGl0bGUtcGFsZXR0ZTogKFxyXG4gIG1vYmlsZTogKCdoMSc6IDIwLFxyXG4gICAgJ2gyJzogMTYsXHJcbiAgICAnaDMnOiAxNSxcclxuICAgICdoNCc6IDE0LFxyXG4gICAgJ2g1JzogMTQsXHJcbiAgICAnaDYnOiAxNCksXHJcbiAgdGFibGV0OiAoJ2gxJzogNDAsXHJcbiAgICAnaDInOiAzMCxcclxuICAgICdoMyc6IDI4LFxyXG4gICAgJ2g0JzogMjAsXHJcbiAgICAnaDUnOiAxOCxcclxuICAgICdoNic6IDE2KSxcclxuICBkZXNrdG9wOiAoJ2gxJzogNDAsXHJcbiAgICAnaDInOiAzMCxcclxuICAgICdoMyc6IDI4LFxyXG4gICAgJ2g0JzogMjAsXHJcbiAgICAnaDUnOiAxOCxcclxuICAgICdoNic6IDE2KSxcclxuICB3aWRlc2NyZWVuOiAoJ2gxJzogNDAsXHJcbiAgICAnaDInOiAzMCxcclxuICAgICdoMyc6IDI4LFxyXG4gICAgJ2g0JzogMjAsXHJcbiAgICAnaDUnOiAxOCxcclxuICAgICdoNic6IDE2KVxyXG4pO1xyXG5cclxuLy8gaGVhZGluZ3Mgc3R5bGVcclxuJGhlYWRpbmdzLWZvbnQtZmFtaWx5OiAkYmFzZS1mb250LWZhbWlseTtcclxuJGhlYWRpbmdzLWNvbG9yOiBpbmhlcml0ICFkZWZhdWx0O1xyXG5cclxuLy8gQnV0dG9uc1xyXG4vLyBidG4gZGVmYXVsdFxyXG4kYnRuLWJvcmRlci13aWR0aDogMXB4ICFkZWZhdWx0O1xyXG4vLyAkYnRuLWJvcmRlcjogICAgICAgICAgICAgICAgICAgICAgICAkYnRuLWJvcmRlci13aWR0aCBzb2xpZCB0cmFuc3BhcmVudCAhZGVmYXVsdDtcclxuJGJ0bi1ib3JkZXItcmFkaXVzOiAkYmFzZS1yYWRpdXM7XHJcbiRidG4tYm9yZGVyLXJhZGl1cy1zbTogJGJhc2UtcmFkaXVzLXNtYWxsO1xyXG4kYnRuLXBhZGRpbmc6IDEwcHggMjBweCAhZGVmYXVsdDtcclxuJGJ0bi1wYWRkaW5nLXNtOiA0cHggMTBweCAhZGVmYXVsdDtcclxuJGJ0bi1mb250LXNpemU6IDE1cHggIWRlZmF1bHQ7XHJcbiRidG4tbGluZS1oZWlnaHQ6ICRidG4tZm9udC1zaXplICsgMjtcclxuXHJcbiRidG4tYmFja2dyb3VuZDogJGJsYWNrICAhZGVmYXVsdDtcclxuJGJ0bi1ib3JkZXI6ICRidG4tYmFja2dyb3VuZCAgIWRlZmF1bHQ7XHJcbiRidG4tY29sb3I6ICR3aGl0ZSAgIWRlZmF1bHQ7XHJcbi8vIGhvdmVyXHJcbiRidG4taG92ZXItYmFja2dyb3VuZDogZGFya2VuKCRidG4tYmFja2dyb3VuZCwgMTAlKSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXI6ICRidG4taG92ZXItYmFja2dyb3VuZCAgIWRlZmF1bHQ7XHJcbiRidG4taG92ZXItY29sb3I6ICR3aGl0ZSAgIWRlZmF1bHQ7XHJcblxyXG4vLyBidG4gcHJpbWFyeVxyXG4kYnRuLWJhY2tncm91bmQtcHJpbWFyeTogJHByaW1hcnkgICFkZWZhdWx0O1xyXG4kYnRuLWJvcmRlci1wcmltYXJ5OiAkcHJpbWFyeSAgIWRlZmF1bHQ7XHJcbiRidG4tY29sb3ItcHJpbWFyeTogJHdoaXRlICAhZGVmYXVsdDtcclxuLy8gaG92ZXJcclxuJGJ0bi1ob3Zlci1iYWNrZ3JvdW5kLXByaW1hcnk6IGRhcmtlbigkcHJpbWFyeSwgMTAlKSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXItcHJpbWFyeTogJGJ0bi1ob3Zlci1iYWNrZ3JvdW5kLXByaW1hcnkgICFkZWZhdWx0O1xyXG4kYnRuLWhvdmVyLWNvbG9yLXByaW1hcnk6ICR3aGl0ZSAgIWRlZmF1bHQ7XHJcblxyXG4vLyBidG4gd2FybmluZ1xyXG4kYnRuLWJhY2tncm91bmQtd2FybmluZzogJHdhcm5pbmcgICFkZWZhdWx0O1xyXG4kYnRuLWJvcmRlci13YXJuaW5nOiAkYnRuLWJhY2tncm91bmQtd2FybmluZyAgIWRlZmF1bHQ7XHJcbiRidG4tY29sb3Itd2FybmluZzogJHdoaXRlICAhZGVmYXVsdDtcclxuLy8gaG92ZXJcclxuJGJ0bi1ob3Zlci1iYWNrZ3JvdW5kLXdhcm5pbmc6IGRhcmtlbigkd2FybmluZywgMTAlKSAhZGVmYXVsdDtcclxuJGJ0bi1ob3Zlci1ib3JkZXItd2FybmluZzogJGJ0bi1ob3Zlci1iYWNrZ3JvdW5kLXdhcm5pbmcgICFkZWZhdWx0O1xyXG4kYnRuLWhvdmVyLWNvbG9yLXdhcm5pbmc6ICR3aGl0ZSAgIWRlZmF1bHQ7XHJcblxyXG4vLyBGb3Jtc1xyXG4kaW5wdXQtZm9udC1zaXplOiAkZm9udC1zaXplLWJhc2U7IC8vIGZvbnQgc2l6ZSBmb3IgZm9ybXMgZWxlbWVudHNcclxuJGlucHV0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtZm9udC1zaXplICsgMjsgLy8gbGluZSBoZWlnaHQgZm9yIGZvcm1zIGVsZW1lbnRzXHJcbiRpbnB1dC1mb250LWZhbWlseTogJGJhc2UtZm9udDtcclxuJGlucHV0LXBhZGRpbmctdmVydGljYWw6IDEwcHggIWRlZmF1bHQ7IC8vIHBhZGRpbmcgZm9yIGZvcm1zIGVsZW1lbnRzXHJcbiRpbnB1dC1wYWRkaW5nLWhvcml6b250YWw6IDIwcHggIWRlZmF1bHQ7IC8vIHBhZGRpbmcgZm9yIGZvcm1zIGVsZW1lbnRzXHJcbiRpbnB1dC1wYWRkaW5nOiAkaW5wdXQtcGFkZGluZy12ZXJ0aWNhbCAkaW5wdXQtcGFkZGluZy1ob3Jpem9udGFsICAhZGVmYXVsdDtcclxuJGlucHV0LWJvcmRlci13aWR0aDogMXB4ICFkZWZhdWx0OyAvLyBib3JkZXIgaW5wdXQncyB3aWR0aFxyXG4kaW5wdXQtYm9yZGVyOiAkaW5wdXQtYm9yZGVyLXdpZHRoIHNvbGlkICRibGFjayAgIWRlZmF1bHQ7IC8vIGJvcmRlciBmb3IgZm9ybXMgZWxlbWVudHNcclxuJGlucHV0LWJvcmRlci1yYWRpdXM6IDAgIWRlZmF1bHQ7IC8vIGJvcmRlciByYWRpdXMgZm9yIGZvcm1zIGVsZW1lbnRzXHJcbiRpbnBIOiAkaW5wdXQtYm9yZGVyLXdpZHRoICsgMiAqICRpbnB1dC1wYWRkaW5nLXZlcnRpY2FsICsgJGlucHV0LWxpbmUtaGVpZ2h0O1xyXG4kaW5wdXQtaGVpZ2h0OiAoXHJcbiAgMiAqICgkaW5wdXQtYm9yZGVyLXdpZHRoICsgJGlucHV0LXBhZGRpbmctdmVydGljYWwpICsgJGlucHV0LWxpbmUtaGVpZ2h0KSAhZGVmYXVsdDsgLy8gaGVpZ2h0IGZvciBmb3JtcyBlbGVtZW50c1xyXG4vL3N1Ym1pdFxyXG4kc3VibWl0LWJhY2tncm91bmQ6ICRidG4tYmFja2dyb3VuZDtcclxuJHN1Ym1pdC1jb2xvcjogJGJ0bi1jb2xvcjtcclxuJHN1Ym1pdC1oZWlnaHQ6ICRpbnB1dC1oZWlnaHQ7XHJcbiRzdWJtaXQtYm9yZGVyOiAkYnRuLWJvcmRlcjtcclxuJHN1Ym1pdC1wYWRkaW5nOiAkaW5wdXQtcGFkZGluZztcclxuJHN1Ym1pdC1mb250LXNpemU6ICRpbnB1dC1mb250LXNpemU7XHJcbiRzdWJtaXQtbGluZS1oZWlnaHQ6ICRpbnB1dC1saW5lLWhlaWdodDtcclxuLy8gc3VibWl0IGhvdmVyXHJcbiRzdWJtaXQtaG92ZXItYmFja2dyb3VuZDogJGJ0bi1ob3Zlci1iYWNrZ3JvdW5kOyAvLyBzdWJtaXQgYmFja2dyb3VuZCBob3ZlclxyXG4kc3VibWl0LWhvdmVyLWNvbG9yOiAkYnRuLWhvdmVyLWNvbG9yOyAvLyBzdWJtaXQgY29sb3IgaG92ZXJcclxuLy9mb2N1c1xyXG4kaW5wdXQtZm9jdXMtYm9yZGVyLWNvbG9yOiAkYmxhY2sgICFkZWZhdWx0OyAvLyBib3JkZXIgY29sb3IgZm9yIGZvcm1zIGVsZW1lbnRzXHJcbi8vcGxhY2Vob2xkZXJcclxuJHBsYWNlaG9sZGVyLWNvbG9yOiAkZ3JheSAgIWRlZmF1bHQ7XHJcbi8vIHNlbGVjdFxyXG4kc2VsZWN0LWhlaWdodDogJGlucHV0LWhlaWdodDtcclxuJHNlbGVjdC1ib3JkZXI6ICRpbnB1dC1ib3JkZXI7XHJcbiRzZWxlY3QtYm9yZGVyLXJhZGl1czogJGlucHV0LWJvcmRlci1yYWRpdXM7XHJcbiRzZWxlY3QtcGFkZGluZzogJGlucHV0LXBhZGRpbmc7XHJcbiRzZWxlY3QtZm9udC1zaXplOiAkaW5wdXQtZm9udC1zaXplO1xyXG4kc2VsZWN0LWxpbmUtaGVpZ2h0OiAkaW5wdXQtbGluZS1oZWlnaHQ7XHJcblxyXG4vLyBhbmltYXRpb24gc3BlZWRcclxuJGFuaW1hdGlvbi1zcGVlZDogMC41czsiXX0= */
